class SMI_CartDrawer {
    constructor(selector) {
        this.wrapper = document.querySelector(`${selector}`)
        this.handleToggle()
        this.note()
        this.compatible()

        document.addEventListener('smiCartDrawerRender', () => {
            this.render()
        })
    }

    compatible() {
        subscribe(PUB_SUB_EVENTS.cartUpdate, (event) => {
            console.log('PUB_SUB_EVENTS.cartUpdate')
            this.render()
        });
    }

    render() {
        const cartDrawerEl = document.querySelector('.smi-cart-drawer-1')
        if (cartDrawerEl) {
            const sectionId = cartDrawerEl.getAttribute('id')
            const _sectionId = sectionId.replace('shopify-section-', '')
            fetch(`/?sections=${_sectionId},smi-cart-icon-bubble`).then((response) => response.json()).then((data) => {
                const html = new DOMParser().parseFromString(data[_sectionId], 'text/html')
                if (data?.['smi-cart-icon-bubble']) {
                    const iconBubble = new DOMParser().parseFromString(data?.['smi-cart-icon-bubble'], 'text/html')
                    const _cartIconEl = iconBubble.querySelector('.shopify-section a')
                    if (_cartIconEl) {
                        const cartIconEls = document.querySelectorAll('.smi-section-header-1 .smi-cart-button')
                        if (cartIconEls.length) {
                            cartIconEls.forEach(item => {
                                item.innerHTML = _cartIconEl.innerHTML
                            })

                        }
                    }
                }
                const htmlRenderEl = html.querySelector('.smi-drawer-items_w')
                if (htmlRenderEl) {
                    const _cartDrawerEl = cartDrawerEl.querySelector('.smi-drawer-items_w')
                    if (_cartDrawerEl) {
                        _cartDrawerEl.innerHTML = htmlRenderEl.innerHTML
                        setTimeout(() => {
                            this.openDrawer()
                            this.handleToggle()
                            this.note()
                        }, 10)
                    }
                }
                document.removeEventListener('smiCartDrawerRender', () => {
                    this.render()
                })
            })
        }
    }

    fetchConfig(type = 'json') {
        return {
            method: 'POST',
            headers: { 'Content-Type': 'application/json', Accept: `application/${type}` },
        };
    }

    note() {
        const noteButton = this.wrapper.querySelector('.smi-actions-note')
        if (!noteButton) {
            return;
        }
        const noteWrapper = this.wrapper.querySelector('._note-form')
        const noteContent = this.wrapper.querySelector('#smi-drawer-note')
        const noteBtnSave = this.wrapper.querySelector('#smi-drawer-note-save')
        const noteBtnCancel = this.wrapper.querySelector('#smi-drawer-note-cancel')
        const noteAlert = this.wrapper.querySelector('._note-form ._note-error')

        noteButton.addEventListener('click', () => {
            noteWrapper.classList.add('smi-open')
        })

        if (noteBtnCancel) {
            noteBtnCancel.addEventListener('click', (e) => {
                e.preventDefault()
                noteWrapper.classList.remove('smi-open')
            })
        }

        if (noteBtnSave) {
            noteBtnSave.addEventListener('click', () => {
                const body = JSON.stringify({ note: noteContent.value });
                fetch(`${smiObject.routes.cart_update_url}`, { ...this.fetchConfig(), ...{ body } })
                noteWrapper.classList.remove('smi-open')
            })
        }
    }

    openDrawer() {
        this.wrapper = document.querySelector('.smi-section-cart-drawer-1')
        if (this.wrapper) {
            this.wrapper.classList.add('smi-open')
            document.documentElement.classList.add('smi-overflow-hidden')
        }
    }

    handleToggle() {
        const noteWrapper = this.wrapper.querySelector('._note-form')
        const cartButtons = document.querySelectorAll('.smi-cart-button')
        if (cartButtons.length) {
            cartButtons.forEach(cartButton => {
                cartButton.addEventListener('click', (e) => {
                    e.preventDefault()
                    this.wrapper.classList.add('smi-open')
                    if (noteWrapper) {
                        noteWrapper.classList.remove('smi-open')
                    }
                    document.documentElement.classList.add('smi-overflow-hidden')
                })
            })
        }

        const closeButton = this.wrapper.querySelector('.smi-drawer-close')
        if (closeButton) {
            closeButton.addEventListener('click', () => {
                this.wrapper.classList.remove('smi-open')
                if (noteWrapper) {
                    noteWrapper.classList.remove('smi-open')
                }
                document.documentElement.classList.remove('smi-overflow-hidden')
            })
        }

        const overlayButton = this.wrapper.querySelector('.smi-overlay')
        if (overlayButton) {
            overlayButton.addEventListener('click', () => {
                this.wrapper.classList.remove('smi-open')
                if (noteWrapper) {
                    noteWrapper.classList.remove('smi-open')
                }
                document.documentElement.classList.remove('smi-overflow-hidden')
            })
        }
    }
}